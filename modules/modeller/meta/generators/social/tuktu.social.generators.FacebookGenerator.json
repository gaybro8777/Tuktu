{
	"name": "Facebook Generator",
	"description": "Gets posts containing keywords or from specific users from a given time interval.",
	"class": "tuktu.social.generators.FacebookGenerator",
	"parameters": [
		{
			"name": "nodes",
			"type": "array",
			"required": false,
			"description": "Optionally specify on which nodes to run and how many instances you want on each node.",
			"parameters": [
				{
					"name": "",
					"type": "object",
					"required": true,
					"parameters": [
						{
							"name": "type",
							"type": "string",
							"required": true,
							"description": "The type of node handler, one of SingleNode, SomeNodes, AllNodes (leave empty for local execution)"
						},
						{
							"name": "nodes",
							"type": "string",
							"required": true,
							"description": "The nodes to use for this node handler type"
						},
						{
							"name": "instances",
							"type": "int",
							"required": false,
							"default": 1,
							"description": "The amount of instances per node of this handler type"
						}
					]
				}
			]
		},
		{
			"name": "result",
			"type": "string",
			"required": true
		},
		{
			"name": "stop_on_error",
			"type": "boolean",
			"required": false,
			"description": "If set to false, Tuktu will not kill the flow on data error.",
			"default": true
		},
		{
			"name": "config",
			"type": "object",
			"required": true,
			"parameters": [
				{
					"name": "credentials",
					"type": "object",
					"required": true,
					"parameters": [
						{
							"name": "access_token",
							"description": "The token to access Facebook's API with.",
							"type": "string",
							"required": true
						}
					]
				},
				{
					"name": "filters",
					"type": "object",
					"required": true,
					"parameters": [
						{
							"name": "users",
							"description": "The users (given by their Facebook user id) from which to get everything from their feed, independently from keywords above.",
							"type": "array",
							"required": false,
							"parameters": [
								{
									"name": "",
									"description": "Facebook user id.",
									"type": "string",
									"required": true
								}
							]
						}
					]
				},
				{
					"name": "fields",
					"description": "The Graph API fields to request. If not specified, gets all fields known to exist.",
					"type": "array",
					"required": false,
					"parameters": [
						{
							"name": "",
							"description": "Field name.",
							"type": "string",
							"required": true
						}
					]
				},
				{
					"name": "update_time",
					"label": "Update frequency",
					"description": "Time in seconds between requests, if applicable.",
					"type": "long",
					"required": false,
					"default": 5
				},
				{
					"name": "interval",
					"description": "Time interval to collect data for.",
					"type": "object",
					"required": false,
					"parameters": [
						{
							"name": "start",
							"description": "Timestamp of start time of time interval to collect data for. Can be left empty. If a start-time is given, everything from that time on will be fetched. If it is omitted the current time is assumed.",
							"type": "long",
							"required": false
						},
						{
							"name": "end",
							"description": "Timestamp of end time of time interval to collect data for. Can be left empty. If an end-time is given, everything until that time will be fetched. If it is omitted, no end time is assumed and everything will be fetched perpetually.",
							"type": "long",
							"required": false
						}
					]
				},
				{
					"name": "get_comments",
					"description": "Whether or not to fetch all comments belonging to every post. A field named is_comment with value true indicates something is a comment, if set to false, it is a real post.",
					"type": "boolean",
					"required": false,
					"default": false
				},
				{
					"name": "run_once",
					"description": "All data from start until end time is collected. If the generator should keep on running after that (still respecting your start and end time), set this to true.",
					"type": "boolean",
					"required": false,
					"default": false
				},
				{
					"name": "flush_interval",
					"description": "The time in seconds to wait before flushing posts if the limit of 50 is not reached before.",
					"type": "int",
					"required": false,
					"default": 60
				},
				{
					"name": "comment_interval",
					"description": "The interval in seconds to wait before collecting the comments to a post. This is done retroactively because comments are not made realtime. Make sure to set this interval frequent enough to not run out of memory and fit your application's real-time need, yet long enough to get almost all comments that will be made.",
					"type": "int",
					"required": false,
					"default": 3600
				}
			]
		}
	]
}
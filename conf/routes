# Routes
# This file defines all application routes (Higher priority routes first)
# ~~~~

# Monitor Overview
GET     /                                   controllers.Monitor.fetchLocalInfo(runningPage: Int = 1, finishedPage: Int = 1)
GET     /index                              controllers.Monitor.fetchLocalInfo(runningPage: Int = 1, finishedPage: Int = 1)
GET     /showApps/:rPage/:fPage             controllers.Monitor.fetchLocalInfo(rPage: Int, fPage: Int)
GET     /lastDataPackets/:flow/:proc        controllers.Monitor.getLastDataPacket(flow, proc)

# Dispatching
GET     /dispatch/:id/:inst                 controllers.Asynchronous.load(id, inst: Int)
POST    /config                             controllers.Asynchronous.loadPost

# Synchronous
POST    /sync                               controllers.Synchronous.loadJsonPost

# Monitoring
GET     /terminate/:id/:force/:r/:f         controllers.Monitor.terminate(id, force: Boolean, r: Int, f: Int)
GET     /terminateAll                       controllers.Monitor.terminateAll
POST    /rename                             controllers.Monitor.rename
POST    /showConfigs                        controllers.Monitor.showConfigs
GET     /browseConfigs                      controllers.Monitor.browseConfigs
POST    /startJob                           controllers.Monitor.startJob
POST    /newFile                            controllers.Monitor.newFile
POST    /uploadFile                         controllers.Monitor.uploadFile
POST    /newDirectory                       controllers.Monitor.newDirectory
POST    /deleteFile                         controllers.Monitor.deleteFile
POST    /batchStarter                       controllers.Monitor.batchStarter
POST    /clearFinished/:r/:f                controllers.Monitor.clearFinished(r: Int, f: Int)
POST    /clearErrors/:r/:f                  controllers.Monitor.clearErrors(r: Int, f: Int)
POST    /clear/:id/:r/:f                    controllers.Monitor.clear(id: String, r: Int, f: Int)

# Cluster management
GET     /cluster                            controllers.Cluster.overview
GET     /addNode                            controllers.Cluster.addNode
POST    /addNode                            controllers.Cluster.addNodePost
GET     /delNode/:address                   controllers.Cluster.removeNode(address)
POST    /updateCluster                      controllers.Cluster.updateCluster

# Scheduler
GET     /scheduler                          controllers.Scheduler.overview
GET     /scheduleSimple                     controllers.Scheduler.scheduleSimple
GET     /scheduleCron                       controllers.Scheduler.scheduleCron
POST    /scheduleSimple                     controllers.Scheduler.scheduleSimpleStart
POST    /scheduleCron                       controllers.Scheduler.scheduleCronStart
GET     /terminateScheduler/:id             controllers.Scheduler.terminate(id)
POST    /showConfigsScheduler               controllers.Scheduler.showConfigs

# Visualization
->      /viz                                viz.Routes

# Modeller
->      /modeller                           modeller.Routes

# DFS
GET     /dfsw/filebrowser                   controllers.DFSWrapper.index
->      /dfs                                dfs.Routes

# DB
GET     /dbw/browser                        controllers.DBWrapper.index
->      /db                                 db.Routes

# Web
->      /web                                web.Routes

# API
->      /api/v1                             restapi.Routes

# CORS
OPTIONS  /                                  controllers.Application.options(path="")
OPTIONS  /*path                             controllers.Application.options(path)

# Map static resources from the /public folder to the /assets URL path
GET     /assets/*file                       controllers.Assets.versioned(path="/public", file)

# Flow Manager
GET     /flowManager                        controllers.FlowManager.overview
POST    /flowManager                        controllers.FlowManager.start
